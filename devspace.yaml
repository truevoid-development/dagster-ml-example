version: v2beta1
name: devspace-iceberg
pipelines:
  dev:
    run: |-
      build_images --all -t ${DEVSPACE_RANDOM}
      create_deployments minio nessie trino python kuberay-operator
      wait_pod --label-selector app.kubernetes.io/component=kuberay-operator
      create_deployments ray-cluster
      start_dev --all

images:
  hive-metastore:
    image: truevoid/hive-metastore
    dockerfile: hive-metastore/Dockerfile
    context: hive-metastore

  python:
    image: truevoid/python
    dockerfile: python-hdfs/Dockerfile
    context: python-hdfs

deployments:
  minio:
    helm:
      chart:
        name: minio
        repo: https://charts.bitnami.com/bitnami
      values:
        provisioning:
          nodeSelector: &node_selector
            kubernetes.io/hostname: node-dedicated-0
        auth:
          rootPassword: miniopass
        defaultBuckets: storage
        persistence:
          enabled: true
        pdb:
          create: false

  nessie:
    helm:
      chart:
        path: charts/nessie

  trino:
    helm:
      chart:
        name: trino
        repo: https://trinodb.github.io/charts/
      values:
        image:
          tag: "452"
        additionalConfigProperties:
        - http-server.process-forwarded=true
        coordinator: &trino_config
          nodeSelector: *node_selector
        worker: *trino_config
        additionalCatalogs:
          iceberg: |-
            connector.name=iceberg
            iceberg.catalog.type=rest
            iceberg.rest-catalog.uri=http://nessie:19120/iceberg
            iceberg.rest-catalog.prefix=${DEVSPACE_NAMESPACE}
            iceberg.rest-catalog.warehouse=s3a://storage/lakehouse
            fs.native-s3.enabled=true
            s3.endpoint=http://minio:9000
            s3.region=euwest
            s3.aws-access-key=admin
            s3.aws-secret-key=miniopass
            s3.path-style-access=true

  kuberay-operator:
    helm:
      chart:
        name: kuberay-operator
        repo: https://ray-project.github.io/kuberay-helm/

  ray-cluster:
    helm:
      chart:
        name: ray-cluster
        repo: https://ray-project.github.io/kuberay-helm/

  python:
    helm:
      values:
        nodeSelector: *node_selector
        containers:
        - image: truevoid/python:${DEVSPACE_RANDOM}
          name: python
          command: [start-notebook.sh, --NotebookApp.token='']
          env:
          - name: AWS_ACCESS_KEY_ID
            value: admin
          - name: AWS_SECRET_ACCESS_KEY
            value: miniopass
          - name: AWS_DEFAULT_REGION
            value: euwest

dev:
  python:
    labelSelector:
      app.kubernetes.io/component: python
    sync:
    - path: python-hdfs:.
      excludePaths:
      - "*"
      - "!main.py"
      - "!*.ipynb"
    ports:
    - port: "8888"

  trino:
    labelSelector:
      app.kubernetes.io/instance: trino
      app.kubernetes.io/component: coordinator
    ports:
    - port: "8080"

  nessie:
    labelSelector:
      app.kubernetes.io/instance: nessie
      app.kubernetes.io/name: nessie
    ports:
    - port: "19120"

  minio:
    labelSelector:
      app.kubernetes.io/instance: minio
      app.kubernetes.io/name: minio
    ports:
    - port: "9001"

  ray:
    labelSelector:
      app.kubernetes.io/instance: ray-cluster
      app.kubernetes.io/name: kuberay
    ports:
    - port: "8265"

commands:
  nessie-cli: |-
    kubectl run -it --rm \
      --image=ghcr.io/projectnessie/nessie-cli:latest nessie-cli -- \
        --uri=http://nessie:19120/api/v2

  trino-cli: |-
    kubectl run -it --rm \
      --image=trinodb/trino:latest trino-cli -- \
        trino http://admin@trino:8080 --catalog iceberg

  python: |-
    devspace enter -c python -- bash -c ". /root/.bashrc && poetry run python main.py"

  dump: |-
    kubectl exec postgres-postgresql-0 -- \
      bash -c "PGPASSWORD=hive pg_dump -Z9 -v -h localhost -U hive -d hive" \
      > $(date +'%s').tar.gz

  restore: |-
    helm uninstall --ignore-not-found hive-metastore

    kubectl exec postgres-postgresql-0 -- \
      bash -c "PGPASSWORD=hive dropdb -h localhost -U hive hive"

    kubectl exec postgres-postgresql-0 -- \
      bash -c "PGPASSWORD=hive createdb -h localhost -U hive hive"

    kubectl exec -i postgres-postgresql-0 -- \
      bash -c "PGPASSWORD=hive pg_restore --clean --if-exists -h localhost -d hive -U hive" \
      <$@

    devspace deploy --skip-build hive-metastore
